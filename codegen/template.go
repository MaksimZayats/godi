package codegen

const jinjaTemplate = `
// Code generated by DI. DO NOT EDIT.

package {{ packageName }}

import (
	"github.com/MaximZayats/go-typed-di/codegen"
	"github.com/MaximZayats/go-typed-di/di"
	"reflect"
)

var Config = codegen.Config{
	PackageName:         "{{ config.PackageName }}",
	PathToStorageFolder: ` + "`{{ config.PathToStorageFolder }}`" + `,
	StorageFileName:     "{{ config.StorageFileName }}",
	GetterFunction:      getDecorator,
}

var functions = map[string]any{
	{% for sig in signatures %}
	"{{ sig.FullSignature }}": func(f {{ sig.FullSignature }}, c *di.Container) any {
		return {{ sig.RequiredSignature }} {
			{% if sig.WithReturn %}return {% endif %}f(
				{% for argName in sig.RequiredArgsNames %}{{ argName }},{% endfor %}
				{% for argType in sig.ArgsTypesToGet %}di.MustGetFromContainer[{{ argType }}](c),{% endfor %}
			)
		}
	},
	{% endfor %}
}

func getDecorator(f any) (any, bool) {
	v, ok := functions[reflect.TypeOf(f).String()]
	return v, ok
}

`
